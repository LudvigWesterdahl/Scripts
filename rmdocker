#!/bin/bash

readonly PROG_PATH=${0}
readonly PROG_DIR=${0%/*}
readonly PROG_NAME=$(basename $0)

notify() {
    echo "${PROG_NAME}: $1"
    return 0
}

print_usage() {

    echo "Usage: ${PROG_NAME} [option]"
    echo
    echo "Options:"
    echo " -d,                Perform a dry run"
    echo " -r,                Runs the commands"

    return 0
}

main() {

    declare -ri NUM_ARGS=0

    if [ "${1}" == "-h" ] || [ "${1}" == "--help" ]; then
	print_usage
	return 0
    fi

    if [ $# -le ${NUM_ARGS} ]; then 
	notify "try '${PROG_NAME} -h' or '${PROG_NAME} --help' for more information"
	return 1
    fi

    declare HAS_D_FLAG="false"
    declare HAS_R_FLAG="false"

    declare -i I=$NUM_ARGS
    I=I+1
    while [ $I -le $# ]; do
	case ${!I} in
	    "-d")
		HAS_D_FLAG="true"
		;;
	    "-r")
		HAS_R_FLAG="true"
		;;
	    *)
		notify "${!I} does not match any supported option"
		;;
	esac
	I=I+1
    done

    if [ "${HAS_D_FLAG}" == "true" ]; then
        notify "docker stop \$(docker ps -a -q)"
        notify "docker rm \$(docker ps -a -q)"
        notify "docker system prune -a -f"
	notify "done!"
    elif [ "${HAS_R_FLAG}" == "true" ]; then
        notify "docker stop \$(docker ps -a -q)"
	docker stop $(docker ps -a -q) 1>/dev/null 2>/dev/null
	notify "docker rm \$(docker ps -a -q)"
	docker rm $(docker ps -a -q) -f 1>/dev/null 2>/dev/null
	notify "docker system prune -a -f"
	docker system prune -a -f 1>/dev/null 2>/dev/null
	notify "done!"
    fi

    return 0
}

main "${@}"

